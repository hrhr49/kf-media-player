{"version":3,"sources":["serviceWorkerRegistration.ts","reportWebVitals.ts","components/Keyboard.tsx","components/MatchedText.tsx","hooks/use-flag.ts","deferred.ts","hooks/use-keybindings.ts","components/QuickPick.tsx","text-filters.ts","components/CommandPaletteContext.tsx","hooks/use-quick-pick-logic.ts","components/InputBoxContext.tsx","components/DropFileArea.tsx","commands.ts","components/LandingPage.tsx","hooks/use-cliped-value.ts","../src-common/ipc-common.ts","ipc-renderer.ts","components/KFMediaPlayer.tsx","keybindings.ts","components/App.tsx","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","keyboardStyle","margin","padding","backgroundColor","border","borderRadius","boxShadow","fontSize","Keyboard","keys","strList","map","str","style","MatchedText","text","matchedIndexes","matchedIndexSet","Set","split","s","idx","isMatched","has","color","fontWeight","useFlag","initialValue","useState","value","setValue","set","on","useCallback","off","toggle","currentValue","Deferred","promise","_resolve","_reject","resolve","reject","reason","this","Error","Promise","useKeybindings","keybindings","commandCallbacks","commands","bindGlobal","enabled","commandCallbacksRef","useRef","current","useEffect","forEach","command","mousetrap","bind","unbind","modalStyles","content","top","left","right","bottom","marginRight","transform","width","height","overflow","boxSizing","titleStyle","inputStyle","listStyle","listStyleType","listItemStyle","borderBottom","QuickPickPresentational","title","placeHolder","isOpen","items","selectedIndex","onClose","onTextChange","onMouseDownOutside","renderItem","parentSelector","onMouseDown","onRequestClose","contentLabel","autoFocus","onChange","type","placeholder","item","name","QUICK_PICK_COMMANDS","quickPickKeybindings","cancelQuickPick","selectItemQuickPick","nextItemQuickPick","previousItemQuickPick","textFilterMap","substringFilter","pattern","target","index","indexOf","Array","length","fill","_","i","regexFilter","result","foundedStr","undefined","err","fuzzyFilter","indexes","c","push","itemStyle","itemStyleSelected","textFilter","QuickPickContext","createContext","showQuickPick","QuickPickProvider","modalAppElement","children","ReactModal","setAppElement","deferredRef","setItems","setPlaceHolder","setTitle","inputText","setInputText","setSelectedIndex","isOpenOn","isOpenOff","matchedItems","setMatchedItems","open","close","select","selectedItem","chanegeInputText","newInputText","nextItem","prev","Math","min","previousItem","max","newMatchedItems","useQuickPickLogic","callbacks","quickPickGlobals","options","deferred","Provider","event","createQuickPickContext","isSelected","textFilterKind","ignoreCase","toLowerCase","createTextFilter","CommandPaletteContext","CommandPaletteProvider","promptStyle","InputBoxPresentational","prompt","INPUT_BOX_COMMANDS","inputBoxKeybindings","cancelInputBox","confirmInputBox","InputBoxContext","showInputBox","InputBoxProvider","setPrompt","inputBoxGlobals","createInputBoxContext","fileDropAreaStyle","position","DropFileArea","onDropFile","accept","useDropzone","noKeyboard","noClick","maxFiles","onDrop","acceptedFiles","getRootProps","getInputProps","onClick","stopPropagation","COMMANDS","commandToTitle","replace","v","toUpperCase","landingPageStyle","background","tableStyle","borderCollapse","theadStyle","thStyle","trStyle","tdStyle","LandingPage","commandPaletteOpen","loadUrl","href","clipValue","useClipedValue","step","setRawValue","newValue","up","down","default","IPC_CHANNELS","IPC_API_NAME","canUseIpcApi","ipcRendererApi","ipcChannel","a","createDummyIpcRendererApi","unwrapIpcResult","isOk","data","KFMediaPlayer","fullScreenOn","fullScreenOff","fullScreenToggle","url","setUrl","inputFileData","fileData","mime","blob","Blob","buffer","newUrl","URL","createObjectURL","alert","playing","playingSet","playingOn","playingOff","playingToggle","muted","mutedOn","mutedOff","mutedToggle","loop","loopOn","loopOff","loopToggle","pip","pipOn","pipOff","pipToggle","controls","controlsOn","controlsOff","controlsToggle","showInfo","showInfoOn","showInfoOff","showInfoToggle","volume","volumeUp","volumeDown","volumeDefault","playbackRate","playbackRateUp","playbackRateDown","playbackRateDefault","played","playedSet","loaded","loadedSet","duration","durationSet","player","React","commandPalette","useContext","inputBox","file","seekBySeconds","seconds","currentSeconds","getCurrentTime","seekTo","seekToFraction","fraction","doNothing","seekForward10Seconds","seekBackward10Seconds","seekTo0Percent","seekTo10Percent","seekTo20Percent","seekTo30Percent","seekTo40Percent","seekTo50Percent","seekTo60Percent","seekTo70Percent","seekTo80Percent","seekTo90Percent","ref","onReady","onStart","onPlay","onEnablePIP","onDisablePIP","onPause","onBuffer","onSeek","e","onEnded","onError","_e","onProgress","onDuration","JSON","stringify","canPlay","ReactPlayer","canEnablePip","canEnablePIP","keybindingsJsonSchema","keysJsonSchema","base","properties","createKeybindingsJsonSchema","keybindingsJsonSchemaValidator","Validator","isPartialKeybindings","obj","validate","valid","errors","defaultKeybindings","App","modalRootRef","fullScreen","setFullScreen","document","documentElement","clientWidth","screenWidth","setScreenWidth","clientHeight","screenHeight","setScreenHeight","setKeybindings","onResize","addEventListener","removeEventListener","loadKeybindings","rawObj","String","fullScrenHandle","useFullScreenHandle","enter","exit","divStyle","body","handle","ReactDOM","render","StrictMode","getElementById","process","origin","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"2KAYMA,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DA0CnC,SAASC,EAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,+GAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAACC,GACNL,QAAQK,MAAM,4CAA6CA,MCjGjE,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,qECARO,EAA+B,CACnCC,OAAQ,UACRC,QAAS,UACTC,gBAAiB,UACjBC,OAAQ,iBACRC,aAAc,MACdC,UAAW,mBACXC,SAAU,UAGNC,EAA6B,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,KAC7BC,EACK,OAATD,EACE,GACgB,kBAATA,EACP,CAACA,GACDA,EAEJ,OACE,mCAEIC,EAAQC,KAAI,SAACC,GAAD,OACV,sBAEEC,MAAOb,EAFT,SAIGY,GAHIA,SC3BXE,EAA4D,SAAC,GAG5D,IAFLC,EAEI,EAFJA,KACAC,EACI,EADJA,eAEMC,EAAkB,IAAIC,IAAIF,GAChC,OACE,mCAEID,EACCI,MAAM,IACNR,KAAI,SAACS,EAAGC,GACP,IAAMC,EAAYL,EAAgBM,IAAIF,GAChCR,EAAuB,CAC3BW,MAAOF,EAAY,QAAU,OAC7BG,WAAYH,EAAY,OAAS,UAEnC,OACE,sBAEET,MAAOA,EAFT,SAIGO,GAHIC,S,gBCrBbK,EAAU,SAACC,GAA2B,IAAD,EACfC,mBAASD,GADM,mBAClCE,EADkC,KAC3BC,EAD2B,KAmBzC,MAAO,CAACD,EAhBU,CAChBE,IAAKD,EAELE,GAAIC,uBAAY,WACdH,GAAS,KACR,IAEHI,IAAKD,uBAAY,WACfH,GAAS,KACR,IAEHK,OAAQF,uBAAY,WAClBH,GAAS,SAACM,GAAD,OAAmBA,OAC3B,O,QClBDC,EAKJ,aAAe,IAAD,gCAJdC,aAIc,OAHdC,cAGc,OAFdC,aAEc,OAadC,QAAU,SAACZ,GAAD,OAAgB,EAAKU,SAASV,IAb1B,KAcda,OAAS,SAACC,GAAD,OAAiB,EAAKH,QAAQG,IAbrCC,KAAKL,SAAW,WACd,MAAMM,MAAM,oCAEdD,KAAKJ,QAAU,WACb,MAAMK,MAAM,mCAEdD,KAAKN,QAAU,IAAIQ,SAAW,SAACL,EAASC,GACtC,EAAKH,SAAWE,EAChB,EAAKD,QAAUE,M,iBCIfK,G,MAAiB,YAYhB,IAXLC,EAWI,EAXJA,YACAC,EAUI,EAVJA,iBACAC,EASI,EATJA,SASI,IARJC,kBAQI,aAPJC,eAOI,SACEC,EAAsBC,iBAAOL,GACnCI,EAAoBE,QAAUN,EAE9BO,qBAAU,WACR,GAAKJ,EAuBL,OAtBAF,EAASO,SAAQ,SAACC,GAChB,IAAMjD,EAAOuC,EAAYU,GACrBjD,IAEE0C,EACFQ,IAAUR,WACR1C,GACA,WAAO,IAAD,IACJ,aAAA4C,EAAoBE,SAAQG,UAA5B,oBAIJC,IAAUC,KACRnD,GACA,WAAO,IAAD,IACJ,aAAA4C,EAAoBE,SAAQG,UAA5B,wBAOH,WACLR,EAASO,SAAQ,SAACC,GAChB,IAAMjD,EAAOuC,EAAYU,GAErBjD,GACFkD,IAAUE,OAAOpD,SAItB,CAACuC,EAAaI,EAASD,EAAYD,MC/BlCY,EAAc,CAClBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,wBACXC,MAAO,MACPC,OAAQ,MACRC,SAAU,SACVtE,QAAS,MACTuE,UAAW,eAITC,EAA4B,CAChCzE,OAAQ,EACRC,QAAS,UACTuE,UAAW,aACXjD,MAAO,QAGHmD,EAA4B,CAChCL,MAAO,OACPrE,OAAQ,EACRC,QAAS,UAETK,SAAU,QACVkE,UAAW,aACXrE,OAAQ,mBACRoB,MAAO,QAGHoD,EAA2B,CAC/BN,MAAO,OACPO,cAAe,OACf5E,OAAQ,EACRC,QAAS,EACTsB,MAAO,QAGHsD,EAA+B,CACnCR,MAAO,OACPpE,QAAS,EACTD,OAAQ,EACR8E,aAAc,iBACdN,UAAW,aACXjD,MAAO,QAmBHwD,EAA0B,YAWW,IAVzCC,EAUwC,EAVxCA,MACAC,EASwC,EATxCA,YACAC,EAQwC,EARxCA,OACAC,EAOwC,EAPxCA,MACAC,EAMwC,EANxCA,cACAC,EAKwC,EALxCA,QACAC,EAIwC,EAJxCA,aACAC,EAGwC,EAHxCA,mBACAC,EAEwC,EAFxCA,WACAC,EACwC,EADxCA,eAEA,OACE,qBAAKC,YAAaH,EAAlB,SACE,eAAC,IAAD,CACEL,OAAQA,EACRS,eAAgBN,EAChBzE,MAAOiD,EACP+B,aAAa,kBACbH,eAAgBA,EALlB,UAQIT,GACA,qBAAKpE,MAAO6D,EAAZ,SAA0BO,IAE5B,uBACEa,WAAS,EACTC,SAAUR,EACVS,KAAK,OACLC,YAAaf,EACbrE,MAAO8D,IAET,oBAAI9D,MAAO+D,EAAX,SAEIQ,EACGzE,KAAI,SAACuF,EAAM7E,GAAP,OACH,oBAEER,MAAOiE,EAFT,SAIGW,EAAWS,EAAM7E,IAAQgE,IAJ5B,UACUa,EAAKC,kBA2BzBC,EAAsB,CAC1B,kBACA,sBACA,oBACA,yBAMIC,EAAuD,CAC3DC,gBAAiB,MACjBC,oBAAqB,QACrBC,kBAAmB,OACnBC,sBAAuB,M,QC1InBC,EAAoD,CACxDC,gBAzCkC,SAACC,EAASC,GAC5C,IAAMC,EAAQD,EAAOE,QAAQH,GAC7B,OAAGE,GAAS,EACHE,MAAMJ,EAAQK,QAAQC,KAAK,GAAGvG,KAAI,SAACwG,EAAGC,GAAJ,OAAUA,EAAIN,KAEhD,MAqCTO,YAjC8B,SAACT,EAASC,GACxC,IACE,IAAMS,EAAST,EAAO1I,MAAMyI,GAC5B,GAAGU,EAAQ,CACT,IAAMC,EAAaD,EAAO,GACpBR,EAAQQ,EAAOR,MACrB,YAAcU,IAAVV,EACK,KAEFE,MAAMO,EAAWN,QAAQC,KAAK,GAAGvG,KAAI,SAACwG,EAAGC,GAAJ,OAAUA,EAAIN,KAE1D,OAAO,KAET,MAAMW,GAEN,OAAO,OAmBTC,YAf8B,SAACd,EAASC,GACxC,IADmD,EAC7Cc,EAAU,GACZb,EAAQ,EAFuC,cAGnCF,GAHmC,IAGnD,2BAAyB,CAAC,IAAfgB,EAAc,QAEvB,IADAd,EAAQD,EAAOE,QAAQa,EAAGd,IACd,EAAG,OAAO,KACtBa,EAAQE,KAAKf,GACbA,KAPiD,8BASnD,OAAOa,ICPHG,EAA2B,CAC/B3H,gBAAiB,QACjBmE,MAAO,OACPC,OAAQ,OACRtE,OAAQ,EACRC,QAAS,UACTuE,UAAW,cAGPsD,EAAgC,2BACjCD,GADiC,IAEpC3H,gBAAiB,S,EF8IY,YAMxB,IALLsF,EAKI,EALJA,WACAuC,EAII,EAJJA,WAKMC,EAAmBC,wBAAsC,CAC7D/C,QAAQ,EACRgD,cAAe,WAAQ,MAAMtF,MAAM,4CACnCyD,gBAAiB,WAAQ,MAAMzD,MAAM,4CACrC0D,oBAAqB,WAAQ,MAAM1D,MAAM,4CACzC2D,kBAAmB,WAAQ,MAAM3D,MAAM,4CACvC4D,sBAAuB,WAAQ,MAAM5D,MAAM,8CA2G7C,MAAO,CACLoF,mBACAG,kBA1GwB,SAAC,GAQpB,IAPL1C,EAOI,EAPJA,eAOI,IANJ2C,uBAMI,MANc,QAMd,EALJC,EAKI,EALJA,SAMAC,IAAWC,cAAcH,GACzB,IAAMI,EAAcnF,iBAAqC,MAFrD,EAGsB1B,mBAAiB,IAHvC,mBAGGwD,EAHH,KAGUsD,EAHV,OAIkC9G,mBAAS,IAJ3C,mBAIGsD,EAJH,KAIgByD,EAJhB,OAKsB/G,mBAAS,IAL/B,mBAKGqD,EALH,KAKU2D,EALV,OG1LkB,YAMnB,IALLxD,EAKI,EALJA,MACA4C,EAII,EAJJA,WAII,EAC8BpG,mBAAS,IADvC,mBACGiH,EADH,KACcC,EADd,OAEsClH,mBAAS,GAF/C,mBAEGyD,EAFH,KAEkB0D,EAFlB,OAG6CrH,GAAQ,GAHrD,mBAGGyD,EAHH,YAGgB6D,EAHhB,EAGYhH,GAAmBiH,EAH/B,EAG0B/G,IAH1B,EAIoCN,mBAAgC,IAJpE,mBAIGsH,EAJH,KAIiBC,EAJjB,KAMEC,EAAOnH,uBAAY,WACvB6G,EAAa,IACbC,EAAiB,GACjBC,MACC,CAACA,IAEEK,EAAQpH,uBAAY,WACxB6G,EAAa,IACbC,EAAiB,GACjBE,MACC,CAACA,IAEE9G,EAASF,uBAAY,WACrBkD,EACFkE,IAEAD,MAED,CAACjE,EAAQiE,EAAMC,IAEZC,EAASrH,uBAA+B,WAAO,IAAD,IAC5CsH,EAAY,oBAAGL,EAAa7D,UAAhB,aAAG,EAA6BtB,eAAhC,QAA2C,KAE7D,OADAsF,IACOE,IACN,CAAClE,EAAe6D,EAAcG,IAE3BG,EAAmBvH,uBAAY,SAACwH,GACpCX,EAAaW,GACbV,EAAiB,KAChB,IAEGW,EAAWzH,uBAAY,WAC3B8G,GAAiB,SAACY,GAAD,OAAUC,KAAKC,IAAIF,EAAO,EAAGT,EAAajC,OAAS,QACnE,CAACiC,IAEEY,EAAe7H,uBAAY,WAC/B8G,GAAiB,SAACY,GAAD,OAAUC,KAAKG,IAAI,EAAGJ,EAAO,QAC7C,IAiBH,OAfAnG,qBAAU,WACR,IAAMwG,EAAyC,GAC/C5E,EAAM3B,SAAQ,SAACyC,GACb,IAAMlF,EAAiBgH,EAAWa,EAAW3C,EAAKC,MAC3B,OAAnBnF,GACFgJ,EAAgBnC,KAAK,CACnB1B,KAAMD,EAAKC,KACXnF,iBACA+C,QAASmC,OAIfiD,EAAgBa,KACf,CAACnB,EAAW1D,EAAQC,EAAO4C,IAEvB,CACL7C,SACAiE,OACAC,QACAlH,SACAuH,WACAI,eACAR,SACAE,mBACAN,eACA7D,iBHgII4E,CAAwB,CAAC7E,QAAO4C,eAVlC7C,EARE,EAQFA,OACAiE,EATE,EASFA,KACAC,EAVE,EAUFA,MAEAK,EAZE,EAYFA,SACAI,EAbE,EAaFA,aACAR,EAdE,EAcFA,OACAE,EAfE,EAeFA,iBACAN,EAhBE,EAgBFA,aACA7D,EAjBE,EAiBFA,cAuBIiB,EAAkB,WAAO,IAAD,EAC5B+C,IACA,UAAAZ,EAAYlF,eAAZ,SAAqBd,QAAQ,OAQzByH,EAAgC,CACpC5D,kBACAC,oBAP0B,WAAO,IAAD,EAC1BL,EAAOoD,IACb,UAAAb,EAAYlF,eAAZ,SAAqBd,QAAQyD,IAM7BM,kBAAmBkD,EACnBjD,sBAAuBqD,GAIzB/G,EAAe,CACbC,YAAaqD,EACbpD,iBAAkBiH,EAClBhH,SAAUkD,EACVjD,YAAY,EACZC,QAAS+B,IAGX,IAAMgF,EAAwC,aAC5ChF,SACAgD,cA5CoB,SAAC/C,EAAegF,GAAsD,IAAD,EAIrFA,GAAW,GAJ0E,IAEvFlF,mBAFuF,MAEzE,GAFyE,MAGvFD,aAHuF,MAG/E,GAH+E,EAMzF0D,EAAezD,GACf0D,EAAS3D,GAETyD,EAAStD,GACT,IAAMiF,EAAW,IAAIhI,EAGrB,OAFAoG,EAAYlF,QAAU8G,EACtBjB,IACOiB,EAAS/H,UAgCb4H,GAGL,OACE,eAACjC,EAAiBqC,SAAlB,CACEzI,MAAOsI,EADT,UAIIhF,GACA,cAAC,EAAD,CACEF,MAAOA,EACPC,YAAaA,EACbC,OAAQA,EACRC,MAAO8D,EACP7D,cAAeA,EACfC,QAASgB,EACTf,aAjEmD,SAACgF,GAC1Df,EAAiBe,EAAM1D,OAAOhF,QAiExB2D,mBAAoBc,EACpBb,WAAYA,EACZC,eAAgBA,IAGnB4C,OE7OLkC,CAA2C,CAC7C/E,WAlBiB,SAAC,EAElBgF,GACI,IAFHtE,EAEE,EAFFA,KAAMnF,EAEJ,EAFIA,eAAgB+C,EAEpB,EAFoBA,QAGvB,OACE,sBACElD,MAAO4J,EAAa1C,EAAoBD,EAD1C,UAGE,cAAC,EAAD,CAAa/G,KAAMoF,EAAMnF,eAAgBA,IACzC,cAAC,EAAD,CAAUP,KAAMsD,EAAQtD,WAU5BuH,WDjBuB,SACvB0C,EACAN,GAGgB,IAAD,UAGXA,QAHW,IAGXA,IAAW,IADbO,kBAFa,SAaf,OARmB,SAAC/D,EAAiBC,GAKnC,OAJI8D,IACF/D,EAAUA,EAAQgE,cAClB/D,EAASA,EAAO+D,eAEXlE,EAAcgE,GAAgB9D,EAASC,ICEpCgE,CAAiB,cAAe,CAACF,YAAY,MAJvCG,E,EAAlB7C,iBACmB8C,E,EAAnB3C,kBEpCItE,EAAc,CAClBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,wBACXC,MAAO,MACPC,OAAQ,MACRC,SAAU,SACVtE,QAAS,MACTuE,UAAW,eAITuG,EAA6B,CACjC/K,OAAQ,EACRC,QAAS,UACTuE,UAAW,aACXjD,MAAO,QAGHmD,EAA4B,CAChCL,MAAO,OACPrE,OAAQ,EACRC,QAAS,UAETK,SAAU,QACVkE,UAAW,aACXrE,OAAQ,mBACRoB,MAAO,QAaHyJ,EAAyB,SAAC,GAQI,IAPlCC,EAOiC,EAPjCA,OACAhG,EAMiC,EANjCA,YACAC,EAKiC,EALjCA,OACAG,EAIiC,EAJjCA,QACAC,EAGiC,EAHjCA,aACAC,EAEiC,EAFjCA,mBACAE,EACiC,EADjCA,eAEA,OACE,qBAAKC,YAAaH,EAAlB,SACE,eAAC,IAAD,CACEL,OAAQA,EACRS,eAAgBN,EAChBzE,MAAOiD,EACP+B,aAAa,YACbH,eAAgBA,EALlB,UAOE,uBACEI,WAAS,EACTC,SAAUR,EACVS,KAAK,OACLC,YAAaf,EACbrE,MAAO8D,IAGPuG,GACA,qBAAKrK,MAAOmK,EAAZ,SAA2BE,UAoB/BC,EAAqB,CACzB,iBACA,mBAMIC,EAAqD,CACzDC,eAAgB,MAChBC,gBAAiB,S,EAGW,WAC5B,IAAMC,EAAkBrD,wBAA+B,CACrD/C,QAAQ,EACRqG,aAAc,WAAQ,MAAM3I,MAAM,2CAClCwI,eAAgB,WAAQ,MAAMxI,MAAM,2CACpCyI,gBAAiB,WAAQ,MAAMzI,MAAM,6CA0GvC,MAAO,CACL0I,kBACAE,iBAzGuB,SAAC,GAQnB,IAPL/F,EAOI,EAPJA,eAOI,IANJ2C,uBAMI,MANc,QAMd,EALJC,EAKI,EALJA,SAMAC,IAAWC,cAAcH,GAEzB,IAAMI,EAAcnF,iBAAuC,MAHvD,EAIkC1B,mBAAS,IAJ3C,mBAIGsD,EAJH,KAIgByD,EAJhB,OAKwB/G,mBAAS,IALjC,mBAKGsJ,EALH,KAKWQ,EALX,OAM8B9J,mBAAS,IANvC,mBAMGiH,EANH,KAMcC,EANd,OAcApH,GAAQ,GAdR,mBASFyD,EATE,YAWI6D,EAXJ,EAWAhH,GACKiH,EAZL,EAYA/G,IAIEkH,EAAOnH,uBAAY,WACvB+G,IACAF,EAAa,MACZ,CAACE,IAEEK,EAAQpH,uBAAY,WACxBgH,MACC,CAACA,IAEE1D,EAAqDtD,uBAAY,SAACsI,GACtEzB,EAAayB,EAAM1D,OAAOhF,SACzB,IAiBGwJ,EAAiB,WAAO,IAAD,EAC3BhC,IACA,UAAAZ,EAAYlF,eAAZ,SAAqBd,QAAQ,OAGzB6I,EAAkB,WAAO,IAAD,EAC5BjC,IACA,UAAAZ,EAAYlF,eAAZ,SAAqBd,QAAQoG,IAQ/B9F,EAAe,CACbC,YAAaoI,EACbnI,iBAPgB,CAChBoI,iBACAC,mBAMApI,SAAUiI,EACVhI,YAAY,EACZC,QAAS+B,IAGX,IAAMwG,EAAmC,CACvCxG,SACAqG,aAxCmB,SAACpB,GAAuD,IAAD,EAItEA,GAAW,GAJ2D,IAExElF,mBAFwE,MAE1D,GAF0D,MAGxEgG,cAHwE,MAG/D,GAH+D,EAM1EvC,EAAezD,GACfwG,EAAUR,GAEV,IAAMb,EAAW,IAAIhI,EAGrB,OAFAoG,EAAYlF,QAAU8G,EACtBjB,IACOiB,EAAS/H,SA6BhB+I,iBACAC,mBAGF,OACE,eAACC,EAAgBjB,SAAjB,CACEzI,MAAO8J,EADT,UAIIxG,GACA,cAAC,EAAD,CACE+F,OAAQA,EACRhG,YAAaA,EACbC,OAAQA,EACRG,QAAS+F,EACT9F,aAAcA,EACdC,mBAAoB6F,EACpB3F,eAAgBA,IAGnB4C,OAeLsD,GAFFL,E,EAAAA,gBACAE,E,EAAAA,iB,SClPII,GAAyC,CAC7CC,SAAU,QACV9H,IAAK,EACLC,KAAM,EACNK,MAAO,OACPC,OAAQ,QAGJwH,GAAwC,SAAC,GAIxC,IAHLC,EAGI,EAHJA,WACA1D,EAEI,EAFJA,SACA2D,EACI,EADJA,OACI,EAIkCC,aAAY,CAChDC,YAAY,EACZC,SAAS,EACTC,SAAU,EACVC,OAPa,SAACC,GACdP,EAAWO,EAAc,KAOzBN,WALKO,EAJH,EAIGA,aAAcC,EAJjB,EAIiBA,cAQrB,OACE,gDAASD,EAAa,CAClBE,QAAS,SAACnC,GAAD,OAAsDA,EAAMoC,sBADzE,IAGE9L,MAAOgL,GAHT,UAKE,qCAAWY,MACTnE,OCxCFsE,GAAW,CACf,YAEA,eACA,gBACA,mBAEA,YACA,aACA,gBAEA,UACA,WACA,cAEA,SACA,UACA,aAEA,aACA,cACA,iBAEA,QACA,SACA,YAEA,aACA,cACA,iBAEA,WACA,aACA,gBAEA,iBACA,mBACA,sBAEA,uBACA,wBAEA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBAEA,qBACA,WAgBIC,GAAiB,SAACnJ,GAEtB,OAAOA,EACJoJ,QAAQ,SAAS,SAACC,GAAD,OAAOA,EAAEC,iBAC1BF,QAAQ,kBAAmB,SAC3BA,QAAQ,kBAAmB,SAC3BA,QAAQ,kBAAmB,UChE1BG,GAAkC,CACtC/M,QAAS,WACTgN,WAAY,QACZ5I,MAAO,OACPC,OAAQ,OACRC,SAAU,UAGN2I,GAA4B,CAChCC,eAAgB,YAIZC,GAA4B,CAChClN,gBAAiB,OACjBqB,MAAO,OACPpB,OAAQ,iBACRF,QAAS,OAGLoN,GAAyB,CAC7BpN,QAAS,OAGLqN,GAAyB,CAC7BrN,QAAS,OAGLsN,GAAyB,CAC7BtN,QAAS,OAOLuN,GAAoC,SAAC,GAAD,IACxCzK,EADwC,EACxCA,YADwC,OAGxC,sBACEnC,MAAOoM,GADT,UAGE,4CACA,mDAAqB,cAAC,EAAD,CAAUxM,KAAMuC,EAAY0K,wBACjD,4CAAc,cAAC,EAAD,CAAUjN,KAAMuC,EAAY2K,UAA1C,2BAA6E,mBAAGC,KAAK,2CAAR,6BAC7E,gHAEA,6CACA,wBAAO/M,MAAOsM,GAAd,UACE,wBAAOtM,MAAOwM,GAAd,UACE,oBAAIxM,MAAOyM,GAAX,qBACA,oBAAIzM,MAAOyM,GAAX,kCAEF,gCAEIV,GAASjM,KAAI,SAAC+C,EAASrC,GAAV,OACX,qBAEER,MAAK,2BACA0M,IADA,IAEHpN,gBAAiBkB,EAAM,IAAM,EAAI,OAAS,SAJ9C,UAOE,oBAAIR,MAAO2M,GAAX,SAAsBX,GAAenJ,KACrC,oBAAI7C,MAAO2M,GAAX,SAAqB,cAAC,EAAD,CAAU/M,KAAMuC,EAAYU,SAP5CA,eCnEbmK,GAAY,SAChBhM,EADgB,GAGZ,IAAD,mBADFgI,EACE,KADGE,EACH,KACH,OAAOH,KAAKC,IAAID,KAAKG,IAAIlI,EAAOgI,GAAME,IAGlC+D,GAAiB,SACrBnM,EADqB,GAGjB,IADHkI,EACE,EADFA,IAAKE,EACH,EADGA,IACH,IADQgE,YACR,MADe,EACf,IAC0BnM,mBAASiM,GAAUlM,EAAc,CAACkI,EAAKE,KADjE,mBACIlI,EADJ,KACWmM,EADX,KA+BH,MAAO,CAACnM,EA5BU,CAEhBE,IAAKE,uBAAY,SAACgM,GAChBD,EAAYH,GAAUI,EAAU,CAACpE,EAAKE,OACrC,CAACF,EAAKE,IAETmE,GAAIjM,uBAAY,WACd+L,GAAY,SAACrE,GAAD,OAAUkE,GAAUlE,EAAOoE,EAAM,CAAClE,EAAKE,SAClD,CAACF,EAAKE,EAAKgE,IAEdI,KAAMlM,uBAAY,WAChB+L,GAAY,SAACrE,GAAD,OAAUkE,GAAUlE,EAAOoE,EAAM,CAAClE,EAAKE,SAClD,CAACF,EAAKE,EAAKgE,IAEdlE,IAAK5H,uBAAY,WACf+L,EAAYnE,KACX,CAACA,IAEJE,IAAK9H,uBAAY,WACf+L,EAAYjE,KACX,CAACA,IAEJqE,QAASnM,uBAAY,WACnB+L,EAAYH,GAAUlM,EAAc,CAACkI,EAAKE,OACzC,CAACpI,EAAckI,EAAKE,OCtBrBsE,GAAe,CACnB,gBACA,mBAGIC,GAAe,SCZfC,GAAe,kBAAMD,MAAgBtQ,QAkBrCwQ,GAAyBD,KAAiBvQ,OAAM,OAVpB,WAChC,IAAMwQ,EAAsB,GAM5B,OALAH,GAAa5K,SAAQ,SAACgL,GACpBD,EAAeC,GAAf,sBAA6B,sBAAAC,EAAA,4DACrB7L,MAAM,yBAAD,OAA0B4L,IADV,8CAIxBD,EAG8DG,GAEjEC,GAAkB,SAAItH,GAC1B,GAAIA,EAAOuH,KACT,OAAOvH,EAAOwH,KAId,MAAMxH,EAAOG,KCOXsH,GAAwC,SAAC,GAKxC,IAJL/L,EAII,EAJJA,YACAgM,EAGI,EAHJA,aACAC,EAEI,EAFJA,cACAC,EACI,EADJA,iBACI,EACkBtN,mBAAS,IAD3B,mBACGuN,EADH,KACQC,EADR,KAEE/L,EAAsBC,iBAAgC,MAE5DE,qBAAU,WACR,sBAAC,oCAAAkL,EAAA,yDACMH,KADN,sEAGoBK,GAHpB,SAG0CJ,GAAea,gBAHzD,oBAGSC,GAHT,iBAMOR,EAEEQ,EAFFR,KACAS,EACED,EADFC,KAEIC,EAAO,IAAIC,KAAK,CAACX,EAAKY,QAAS,CAAC1J,KAAMuJ,IACtCI,EAASC,IAAIC,gBAAgBL,GACnCJ,EAAOO,IAXZ,kDAcGzQ,QAAQC,IAAR,MACA2Q,MAAM,EAAD,IAfR,yDAAD,KAkBC,IAvBC,MAiCApO,GAAQ,GAjCR,mBA0BFqO,EA1BE,YA4BKC,EA5BL,EA4BAjO,IACIkO,EA7BJ,EA6BAjO,GACKkO,EA9BL,EA8BAhO,IACQiO,EA/BR,EA+BAhO,OA/BA,EA0CAT,GAAQ,GA1CR,mBAoCF0O,EApCE,YAsCIC,EAtCJ,EAsCArO,GACKsO,EAvCL,EAuCApO,IACQqO,EAxCR,EAwCApO,OAxCA,EAmDAT,GAAQ,GAnDR,mBA6CF8O,EA7CE,YA+CIC,EA/CJ,EA+CAzO,GACK0O,EAhDL,EAgDAxO,IACQyO,EAjDR,EAiDAxO,OAjDA,EA4DAT,GAAQ,GA5DR,mBAsDFkP,EAtDE,YAwDIC,EAxDJ,EAwDA7O,GACK8O,EAzDL,EAyDA5O,IACQ6O,EA1DR,EA0DA5O,OA1DA,EAqEAT,GAAQ,GArER,mBA+DFsP,EA/DE,YAiEIC,GAjEJ,EAiEAjP,GACKkP,GAlEL,EAkEAhP,IACQiP,GAnER,EAmEAhP,OAnEA,GA8EAT,GAAQ,GA9ER,qBAwEF0P,GAxEE,eA0EIC,GA1EJ,GA0EArP,GACKsP,GA3EL,GA2EApP,IACQqP,GA5ER,GA4EApP,OA5EA,GAuFA2L,GAAe,GAAK,CAACjE,IAAK,EAAGE,IAAK,EAAGgE,KAAM,MAvF3C,qBAiFFyD,GAjFE,eAmFIC,GAnFJ,GAmFAvD,GACMwD,GApFN,GAoFAvD,KACSwD,GArFT,GAqFAvD,QArFA,GAgGAN,GAAe,EAAG,CAACjE,IAAK,GAAKE,IAAK,EAAGgE,KAAM,KAhG3C,qBA0FF6D,GA1FE,eA4FIC,GA5FJ,GA4FA3D,GACM4D,GA7FN,GA6FA3D,KACS4D,GA9FT,GA8FA3D,QA9FA,GAuGAN,GAAe,EAAG,CAACjE,IAAK,EAAGE,IAAK,IAvGhC,qBAmGFiI,GAnGE,MAqGKC,GArGL,MAqGAlQ,IArGA,GA8GA+L,GAAe,EAAG,CAACjE,IAAK,EAAGE,IAAK,IA9GhC,qBA0GFmI,GA1GE,MA4GKC,GA5GL,MA4GApQ,IA5GA,GAqHA+L,GAAe,EAAG,CAACjE,IAAK,EAAGE,IAAK,IArHhC,qBAiHFqI,GAjHE,MAmHKC,GAnHL,MAmHAtQ,IAIEuQ,GAASC,IAAMjP,SAEfkP,GAAiBC,qBAAW3H,GAC5B4H,GAAWD,qBAAWlH,GAEtBoC,GAAU4E,IAAMtQ,aAAY,SAAC0N,GACjCP,EAAOO,GACPwC,GAAU,GACVF,GAAU,KACT,CAACE,GAAWF,KAETjG,GAAauG,IAAMtQ,aAAY,SAAC0Q,GACpC,IAAMxD,EAAMS,IAAIC,gBAAgB8C,GAEhChF,GAAQwB,KACP,CAACxB,KAEEiF,GAAgBL,IAAMtQ,aAAY,SAAC4Q,GACvC,GAAIP,GAAO/O,QAAS,CAClB,IAAMuP,EAAiBR,GAAO/O,QAAQwP,iBACtCT,GAAO/O,QAAQyP,OAAOF,EAAiBD,EAAS,cAEjD,IAEGI,GAAiBV,IAAMtQ,aAAY,SAACiR,GACpCZ,GAAO/O,SACT+O,GAAO/O,QAAQyP,OAAOE,EAAU,cAEjC,IAGGjQ,GAAqC,CACzCkQ,UAFgB,aAIhBnE,eACAC,gBACAC,mBAEAe,YACAC,aACAC,gBAEAE,UACAC,WACAC,cAEAE,SACAC,UACAC,aAEAM,cACAC,eACAC,kBAEAN,QACAC,SACAC,YAEAM,cACAC,eACAC,kBAEAE,YACAC,cACAC,iBAEAE,kBACAC,oBACAC,uBAEAqB,qBAAsB,kBAAMR,GAAc,KAC1CS,sBAAuB,kBAAMT,IAAe,KAE5CU,eAAgB,kBAAML,GAAe,IACrCM,gBAAiB,kBAAMN,GAAe,KACtCO,gBAAiB,kBAAMP,GAAe,KACtCQ,gBAAiB,kBAAMR,GAAe,KACtCS,gBAAiB,kBAAMT,GAAe,KACtCU,gBAAiB,kBAAMV,GAAe,KACtCW,gBAAiB,kBAAMX,GAAe,KACtCY,gBAAiB,kBAAMZ,GAAe,KACtCa,gBAAiB,kBAAMb,GAAe,KACtCc,gBAAiB,kBAAMd,GAAe,KAEtCvF,mBAAmB,WAAD,4BAAE,oCAAAgB,EAAA,0DACdgE,GAASvN,SAAUqN,GAAerN,OADpB,wDAIZC,EAAQwH,GAASjM,KAAI,SAAC+C,GAC1B,MAAO,CACLyC,KAAM0G,GAAenJ,GACrBA,UACAjD,KAAMuC,EAAYU,OARJ,SAWC8O,GAAerK,cAAc/C,GAX9B,OAYL,QADPc,EAXY,SAYGA,EAAKxC,UAClBA,EAAUwC,EAAKxC,QACrB,UAAAL,EAAoBE,eAApB,mBAA8BG,UAA9B,kBAdgB,2CAAF,kDAAC,GAkBnBiK,QAAQ,WAAD,4BAAE,4BAAAe,EAAA,0DACHgE,GAASvN,SAAUqN,GAAerN,OAD/B,iEAIcuN,GAASlH,aAAa,CACzCN,OAAQ,sBALH,QAIDyE,EAJC,SASLhC,GAAQgC,GATH,2CAAF,kDAAC,IAmBV,OALAtM,EAAoBE,QAAUN,GAC9BF,EAA+B,CAC7BC,cAAaC,oBAAkBC,SAAU0J,KAGtCuC,EAYH,eAAC,GAAD,CACEnD,WAAYA,GADd,UAGM,cAAC,IAAD,CACEgI,IAAK1B,GACLhO,MAAM,OACNC,OAAO,OACP4K,IAAKA,EACLyB,IAAKA,EACLb,QAASA,EACTiB,SAAUA,EACVR,KAAMA,EACNoB,aAAcA,GACdJ,OAAQA,GACRpB,MAAOA,EAEP6D,QAAS,kBAAM/U,QAAQC,IAAI,YAC3B+U,QAAS,kBAAMhV,QAAQC,IAAI,YAE3BgV,OAAQlE,EACRmE,YAAavD,EACbwD,aAAcvD,EACdwD,QAASpE,EACTqE,SAAU,kBAAMrV,QAAQC,IAAI,aAC5BqV,OAAQ,SAACC,GAAD,OAAOvV,QAAQC,IAAI,SAAUsV,IACrCC,QAAS,WAAO1E,EAAWQ,IAC3BmE,QAAS,SAACC,GACR9E,MAAM,0BAGR+E,WAAY,YAAuB,IAArB3C,EAAoB,EAApBA,OAAQF,EAAY,EAAZA,OACpBG,GAAUD,GACVD,GAAUD,IAEZ8C,WAAYzC,KAGlB,qBACExR,MAAO,CACLiL,SAAU,QACV9H,IAAK,EACLC,KAAM,EACNK,MAAO,OACPC,OAAQ,OACRpE,gBAAiB,iBAKnBiR,IAEA,qBACEvQ,MAAO,CACLiL,SAAU,QACV9H,IAAK,EACLC,KAAM,EACN9D,gBAAiB,4BALrB,SAQE,8BAAK,4CAED4U,KAAKC,UAAU,CACb7F,MACAY,UAASK,QACToB,UAAQI,gBAAcpB,OACtB4B,YAAUJ,UAAQE,UAClBlB,WAAUJ,MACVqE,QAASC,IAAYD,QAAQ9F,GAC7BgG,aAAcD,IAAYE,aAAajG,IACtC,KAAM,gBA/EjB,cAAC,GAAD,CACEnD,WAAYA,GADd,SAGE,cAAC,GAAD,CACEhJ,YAAaA,O,SC9OjBqS,GAvC8B,WAClC,IAAMC,EAAiB,CACrB,MAAS,CACP,CACE,KAAQ,QAEV,CACE,KAAQ,UAEV,CACE,KAAQ,QACR,MAAS,CACP,CACE,KAAQ,UAEV,CACE,KAAQ,cAMZC,EAAY,CAChB,QAAW,0CACX,KAAQ,SACR,sBAAwB,EACxB,WAAc,GAEd,SAAY,IAQd,OALA3I,GAASnJ,SAAQ,SAACC,GAChB6R,EAAKC,WAAW9R,GAAW4R,KAItBC,EAGqBE,GACxBC,GAAiC,IAAIC,aAsBrCC,GAAuB,SAACC,GAC5B,IAAMvO,EAASoO,GAA+BI,SAASD,EAAKR,IAC5D,GAAI/N,EAAOyO,MACT,OAAO,EAEP,MAAMzO,EAAO0O,QAUXC,GAAkC,CACtC9C,UAAW,KAEXnE,aAAc,KACdC,cAAe,KACfC,iBAAkB,IAElBe,UAAW,KACXC,WAAY,KACZC,cAAe,QAEfE,QAAS,KACTC,SAAU,KACVC,YAAa,IAEbE,OAAQ,KACRC,QAAS,KACTC,WAAY,KAEZM,WAAY,KACZC,YAAa,KACbC,eAAgB,IAEhBN,MAAO,KACPC,OAAQ,KACRC,UAAW,IAEXM,WAAY,KACZC,YAAa,KACbC,eAAgB,IAEhBE,SAAU,IACVC,WAAY,IACZC,cAAe,KAEfE,eAAgB,IAChBC,iBAAkB,IAClBC,oBAAqB,KAErBqB,qBAAsB,IACtBC,sBAAuB,IAEvBC,eAAgB,IAChBC,gBAAiB,IACjBC,gBAAiB,IACjBC,gBAAiB,IACjBC,gBAAiB,IACjBC,gBAAiB,IACjBC,gBAAiB,IACjBC,gBAAiB,IACjBC,gBAAiB,IACjBC,gBAAiB,IAEjBrG,mBAAoB,CAAC,kBAAmB,gBACxCC,QAAS,CAAC,kBAAmB,iBCrIzBuI,GAA0B,WAC9B,IAAMC,EAAe7S,iBAAO,MADQ,EAEA1B,oBAAS,GAFT,mBAE7BwU,EAF6B,KAEjBC,EAFiB,OAGEzU,mBAAS0U,SAASC,gBAAgBC,aAHpC,mBAG7BC,EAH6B,KAGhBC,EAHgB,OAII9U,mBAAS0U,SAASC,gBAAgBI,cAJtC,mBAI7BC,EAJ6B,KAIfC,EAJe,OAKEjV,mBAASqU,IALX,mBAK7BjT,EAL6B,KAKhB8T,EALgB,KAOpCtT,qBAAU,WACR,IAAMuT,EAAW,WACfL,EAAeJ,SAASC,gBAAgBC,aACxCK,EAAgBP,SAASC,gBAAgBI,eAG3C,OADA3Y,OAAOgZ,iBAAiB,SAAUD,GAC3B,WACL/Y,OAAOiZ,oBAAoB,SAAUF,MAEtC,IAEHvT,qBAAU,WACR,sBAAC,4BAAAkL,EAAA,yDACMH,KADN,sEAGkBK,GAHlB,SAGwCJ,GAAe0I,kBAHvD,oBAGSC,GAHT,gBAOSvB,GAAqBuB,IACvBL,EAAe,2BACVb,IACAkB,IAVZ,kDAeGjY,QAAQK,MAAR,MACAuQ,MAAM,4CAAD,OAA6CsH,OAAO,EAAD,MAhB3D,yDAAD,KAmBC,IAEH,IAAMC,EAAkBC,cAElBtI,EAAe/M,uBAAY,WAC1BmU,GACHiB,EAAgBE,UAEjB,CAACnB,EAAYiB,IAEVpI,EAAgBhN,uBAAY,WAC5BmU,GACFiB,EAAgBG,SAEjB,CAACpB,EAAYiB,IAEVnI,EAAmBjN,uBAAY,WAC/BmU,EACFiB,EAAgBG,OAEhBH,EAAgBE,UAEjB,CAACnB,EAAYiB,IAEVI,EAA0BrB,EAC5B,CACA9R,MAAO,OACPC,OAAQ,QAER,CACAD,MAAOmS,EACPlS,OAAQqS,GAGNlR,EAAiB,WACrB,OAAGyQ,EAAa5S,QACP4S,EAAa5S,QAEb+S,SAASoB,MAIpB,OACE,cAAC,IAAD,CACEC,OAAQN,EACRtR,SAAUsQ,EAFZ,SAIE,qBAAKrC,IAAKmC,EAAV,SACE,cAACpL,EAAD,CACErF,eAAgBA,EADlB,SAGE,cAAC,EAAD,CACEA,eAAgBA,EADlB,SAGE,qBACE7E,MAAO4W,EADT,SAGE,cAAC,GAAD,CACEzU,YAAaA,EACbgM,aAAcA,EACdC,cAAeA,EACfC,iBAAkBA,eC1GlC0I,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFxB,SAASyB,eAAe,SrBanB,SAAkBzZ,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIqR,IAAIoI,IAAwBha,OAAOC,SAAS2P,MACpDqK,SAAWja,OAAOC,SAASga,OAIvC,OAGFja,OAAOgZ,iBAAiB,QAAQ,WAC9B,IAAM3Y,EAAK,UAAM2Z,IAAN,sBAEPla,IAgEV,SAAiCO,EAAeC,GAE9C4Z,MAAM7Z,EAAO,CACX8Z,QAAS,CAAE,iBAAkB,YAE5BzZ,MAAK,SAAC0Z,GAEL,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYtR,QAAQ,cAG5CxI,UAAUC,cAAcga,MAAM9Z,MAAK,SAACC,GAClCA,EAAa8Z,aAAa/Z,MAAK,WAC7BV,OAAOC,SAASya,eAKpBta,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IAAI,oEAtFVwZ,CAAwBta,EAAOC,GAI/BC,UAAUC,cAAcga,MAAM9Z,MAAK,WACjCQ,QAAQC,IACN,+GAMJf,EAAgBC,EAAOC,OqBnC/Bsa,GAKApZ,M","file":"static/js/main.d80862ba.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  FC,\n  CSSProperties,\n} from 'react';\n\nimport {\n  Keys,\n} from '../keybindings';\n\nconst keyboardStyle: CSSProperties = {\n  margin: '3px 5px',\n  padding: '1px 3px',\n  backgroundColor: '#f9f9f9',\n  border: '1px solid #aaa',\n  borderRadius: '2px',\n  boxShadow: '1px 2px 2px #ddd',\n  fontSize: '0.85em',\n};\n\nconst Keyboard: FC<{keys: Keys}> = ({keys}: {keys: Keys}) => {\n  const strList: string[] =\n    keys === null\n    ? []\n    : typeof keys === 'string'\n    ? [keys]\n    : keys;\n\n  return (\n    <>\n      {\n        strList.map((str) => (\n          <span\n            key={str}\n            style={keyboardStyle}\n          >\n            {str}\n          </span>\n        ))\n      }\n    </>\n  );\n};\n\nexport {\n  Keyboard,\n};\n","import {\n  FC,\n  CSSProperties,\n} from 'react';\n\nconst MatchedText: FC<{text: string; matchedIndexes: number[]}> = ({\n  text,\n  matchedIndexes,\n}) => {\n  const matchedIndexSet = new Set(matchedIndexes);\n  return (\n    <>\n      {\n        text\n        .split('')\n        .map((s, idx) => {\n          const isMatched = matchedIndexSet.has(idx);\n          const style: CSSProperties = {\n            color: isMatched ? 'coral' : '#333',\n            fontWeight: isMatched ? 'bold' : 'normal',\n          };\n          return (\n            <span\n              key={idx}\n              style={style}\n            >\n              {s}\n            </span>\n          )\n        })\n      }\n    </>\n  );\n};\n\nexport {\n  MatchedText,\n};\n","import {useState, useCallback} from 'react';\n\nconst useFlag = (initialValue: boolean) => {\n  const [value, setValue] = useState(initialValue);\n\n  const callbacks = {\n    set: setValue,\n\n    on: useCallback(() => {\n      setValue(true);\n    }, []),\n\n    off: useCallback(() => {\n      setValue(false);\n    }, []),\n\n    toggle: useCallback(() => {\n      setValue((currentValue) => !currentValue);\n    }, []),\n  } as const;\n\n  return [value, callbacks] as const;\n};\n\nexport {\n  useFlag,\n};\n","class Deferred<T> {\n  promise: Promise<T>;\n  _resolve: (value: T) => void;\n  _reject: (reason?: any) => void;\n\n  constructor() {\n    this._resolve = () => {\n      throw Error('_resolve is not initialized yet');\n    };\n    this._reject = () => {\n      throw Error('_reject is not initialized yet');\n    };\n    this.promise = new Promise<T>((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  resolve = (value: any) => this._resolve(value);\n  reject = (reason?:any) => this._reject(reason);\n}\n\nexport {\n  Deferred,\n};\n","import {useEffect, useRef} from 'react';\nimport mousetrap from 'mousetrap';\nimport 'mousetrap/plugins/global-bind/mousetrap-global-bind';\n\nimport type {\n  Keys,\n  // Keybindings,\n} from '../keybindings';\n\n// import {\n//   COMMANDS,\n// } from '../commands';\n\n// import type {\n//   Command,\n//   CommandCallbacks,\n// } from '../commands';\n\nconst useKeybindings = <AllCommandList extends readonly string[]>({\n  keybindings,\n  commandCallbacks,\n  commands,\n  bindGlobal = false,\n  enabled = true,\n}: {\n  keybindings: Record<AllCommandList[number], Keys>;\n  commandCallbacks: Record<AllCommandList[number], () => unknown>;\n  commands: AllCommandList;\n  bindGlobal?: boolean;\n  enabled?: boolean;\n}) => {\n  const commandCallbacksRef = useRef(commandCallbacks);\n  commandCallbacksRef.current = commandCallbacks;\n\n  useEffect(() => {\n    if (!enabled) return;\n    commands.forEach((command: AllCommandList[number]) => {\n      const keys = keybindings[command];\n      if (keys) {\n        // console.log('key bind', keys, command);\n        if (bindGlobal) {\n          mousetrap.bindGlobal(\n            keys,\n            () => {\n              commandCallbacksRef.current[command]?.();\n            }\n          );\n        } else {\n          mousetrap.bind(\n            keys,\n            () => {\n              commandCallbacksRef.current[command]?.();\n            }\n          );\n        }\n      }\n    });\n\n    return () => {\n      commands.forEach((command: AllCommandList[number]) => {\n        const keys = keybindings[command];\n        // console.log('key unbind', keys, command);\n        if (keys) {\n          mousetrap.unbind(keys);\n        }\n      });\n    };\n  }, [keybindings, enabled, bindGlobal, commands]);\n\n};\n\nexport {\n  useKeybindings,\n};\n","import {\n  useState,\n  useRef,\n  createContext,\n  ReactNode,\n  CSSProperties,\n  ChangeEventHandler,\n  MouseEventHandler,\n} from 'react';\nimport ReactModal from 'react-modal';\n\nimport {\n  useQuickPickLogic,\n} from '../hooks/use-quick-pick-logic';\n\nimport type {\n  QuickPickItem,\n  HasName,\n} from '../hooks/use-quick-pick-logic';\n\nimport {\n  TextFilter,\n} from '../text-filters';\n\nimport {\n  Deferred,\n} from '../deferred';\n\nimport {\n  useKeybindings,\n} from '../hooks/use-keybindings';\nimport type {\n  Keys,\n} from '../keybindings';\n\n\nconst modalStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    width: '80%',\n    height: '80%',\n    overflow: 'hidden',\n    padding: '3px',\n    boxSizing: 'border-box',\n  } as CSSProperties,\n};\n\nconst titleStyle: CSSProperties = {\n  margin: 0,\n  padding: '2px 8px',\n  boxSizing: 'border-box',\n  color: '#333',\n};\n\nconst inputStyle: CSSProperties = {\n  width: '100%',\n  margin: 0,\n  padding: '4px 8px',\n  // padding: 0,\n  fontSize: '1.2em',\n  boxSizing: 'border-box',\n  border: 'solid 2px orange',\n  color: '#333',\n};\n\nconst listStyle: CSSProperties = {\n  width: '100%',\n  listStyleType: 'none',\n  margin: 0,\n  padding: 0,\n  color: '#333',\n};\n\nconst listItemStyle: CSSProperties = {\n  width: '100%',\n  padding: 0,\n  margin: 0,\n  borderBottom: '1px solid #aaa',\n  boxSizing: 'border-box',\n  color: '#333',\n};\n\ninterface QuickPickPresentationalProps<Content extends HasName> {\n  title: string;\n  placeHolder: string;\n  isOpen: boolean;\n  selectedIndex: number;\n  items: QuickPickItem<Content>[];\n  onClose: () => unknown;\n  onTextChange: ChangeEventHandler<HTMLInputElement>;\n  onMouseDownOutside: MouseEventHandler<HTMLDivElement>;\n  renderItem: (\n    item: QuickPickItem<Content>,\n    isSelected: boolean,\n  ) => ReactNode;\n  parentSelector?: () => HTMLElement;\n}\n\nconst QuickPickPresentational = <Item extends HasName>({\n  title,\n  placeHolder,\n  isOpen,\n  items,\n  selectedIndex,\n  onClose,\n  onTextChange,\n  onMouseDownOutside,\n  renderItem,\n  parentSelector,\n}: QuickPickPresentationalProps<Item>) => {\n  return (\n    <div onMouseDown={onMouseDownOutside} >\n      <ReactModal\n        isOpen={isOpen}\n        onRequestClose={onClose}\n        style={modalStyles}\n        contentLabel=\"Command Palette\"\n        parentSelector={parentSelector}\n      >\n        {\n          title &&\n          <div style={titleStyle}>{ title }</div>\n        }\n        <input\n          autoFocus\n          onChange={onTextChange}\n          type='text'\n          placeholder={placeHolder}\n          style={inputStyle}\n        ></input>\n        <ul style={listStyle}>\n          {\n            items\n              .map((item, idx) => (\n                <li\n                  key={`${item.name}`}\n                  style={listItemStyle}\n                >\n                  {renderItem(item, idx === selectedIndex)}\n                </li>\n              ))\n          }\n        </ul>\n      </ReactModal>\n    </div>\n  );\n};\n\ninterface QuickPickOptions {\n  placeHolder?: string;\n  title?: string;\n}\n\ninterface QuickPickGlobals<Item extends HasName> {\n  isOpen: boolean;\n  showQuickPick: (items: Item[], options?: QuickPickOptions) => Promise<Item | null>;\n  cancelQuickPick: () => void;\n  selectItemQuickPick: () => void;\n  nextItemQuickPick: () => void;\n  previousItemQuickPick: () => void;\n}\n\nconst QUICK_PICK_COMMANDS = [\n  'cancelQuickPick',\n  'selectItemQuickPick',\n  'nextItemQuickPick',\n  'previousItemQuickPick',\n] as const;\n\ntype QuickPickAllCommandList = typeof QUICK_PICK_COMMANDS;\ntype QuickPickCommand = QuickPickAllCommandList[number];\n\nconst quickPickKeybindings: Record<QuickPickCommand, Keys> = {\n  cancelQuickPick: 'esc',\n  selectItemQuickPick: 'enter',\n  nextItemQuickPick: 'down',\n  previousItemQuickPick: 'up',\n};\n\ntype QuickPickCallbacks = Record<QuickPickCommand, () => unknown>;\n\nconst createQuickPickContext = <Item extends HasName>({\n  renderItem,\n  textFilter,\n}: {\n  renderItem: (item: QuickPickItem<Item>, isSelected: boolean) => ReactNode,\n  textFilter: TextFilter,\n}) => {\n  const QuickPickContext = createContext<QuickPickGlobals<Item>>({\n    isOpen: false,\n    showQuickPick: () => { throw Error('QuickPickGlobals is not initialized yet') },\n    cancelQuickPick: () => { throw Error('QuickPickGlobals is not initialized yet') },\n    selectItemQuickPick: () => { throw Error('QuickPickGlobals is not initialized yet') },\n    nextItemQuickPick: () => { throw Error('QuickPickGlobals is not initialized yet') },\n    previousItemQuickPick: () => { throw Error('QuickPickGlobals is not initialized yet') },\n  });\n\n  const QuickPickProvider = ({\n    parentSelector,\n    modalAppElement = '#root',\n    children\n  }: {\n    parentSelector?: () => HTMLElement;\n    modalAppElement?: string | HTMLElement;\n    children: ReactNode;\n  }) => {\n    ReactModal.setAppElement(modalAppElement);\n    const deferredRef = useRef<Deferred<Item | null> | null>(null);\n    const [items, setItems] = useState<Item[]>([]);\n    const [placeHolder, setPlaceHolder] = useState('');\n    const [title, setTitle] = useState('');\n\n    const {\n      isOpen,\n      open,\n      close,\n      // toggle,\n      nextItem,\n      previousItem,\n      select,\n      chanegeInputText,\n      matchedItems,\n      selectedIndex,\n    } = useQuickPickLogic<Item>({items, textFilter});\n\n    const onTextChange: ChangeEventHandler<HTMLInputElement> = (event) => {\n      chanegeInputText(event.target.value);\n    };\n\n    const showQuickPick = (items: Item[], options?: QuickPickOptions): Promise<Item | null> => {\n      const {\n        placeHolder = '',\n        title = '',\n      } = options || {};\n\n      setPlaceHolder(placeHolder);\n      setTitle(title);\n\n      setItems(items);\n      const deferred = new Deferred<Item | null>();\n      deferredRef.current = deferred;\n      open();\n      return deferred.promise;\n    };\n\n    const cancelQuickPick = () => {\n      close();\n      deferredRef.current?.resolve(null);\n    };\n\n    const selectItemQuickPick = () => {\n      const item = select();\n      deferredRef.current?.resolve(item);\n    };\n\n    const callbacks: QuickPickCallbacks = {\n      cancelQuickPick,\n      selectItemQuickPick,\n      nextItemQuickPick: nextItem,\n      previousItemQuickPick: previousItem,\n    };\n\n    // keybindings\n    useKeybindings({\n      keybindings: quickPickKeybindings,\n      commandCallbacks: callbacks,\n      commands: QUICK_PICK_COMMANDS,\n      bindGlobal: true,\n      enabled: isOpen,\n    });\n\n    const quickPickGlobals: QuickPickGlobals<Item> = {\n      isOpen,\n      showQuickPick,\n      ...callbacks,\n    };\n\n    return (\n      <QuickPickContext.Provider\n        value={quickPickGlobals}\n      >\n        {\n          isOpen &&\n          <QuickPickPresentational\n            title={title}\n            placeHolder={placeHolder}\n            isOpen={isOpen}\n            items={matchedItems}\n            selectedIndex={selectedIndex}\n            onClose={cancelQuickPick}\n            onTextChange={onTextChange}\n            onMouseDownOutside={cancelQuickPick}\n            renderItem={renderItem}\n            parentSelector={parentSelector}\n          />\n        }\n        {children}\n      </QuickPickContext.Provider>\n    );\n  };\n\n  return {\n    QuickPickContext,\n    QuickPickProvider,\n  };\n};\n\nexport {\n  createQuickPickContext,\n};\n","type TextFilterKind = 'fuzzyFilter' | 'substringFilter' | 'regexFilter'\ntype TextFilter = (pattern: string, target: string) => number[] | null;\n\nconst substringFilter: TextFilter = (pattern, target) => {\n  const index = target.indexOf(pattern);\n  if(index >= 0) {\n    return Array(pattern.length).fill(0).map((_, i) => i + index);\n  } else {\n    return null\n  }\n};\n\nconst regexFilter: TextFilter = (pattern, target) => {\n  try {\n    const result = target.match(pattern);\n    if(result) {\n      const foundedStr = result[0];\n      const index = result.index;\n      if (index === undefined) {\n        return null;\n      }\n      return Array(foundedStr.length).fill(0).map((_, i) => i + index);\n    } else {\n      return null\n    }\n  } catch(err) {\n    // regex syntax error\n    return null;\n  }\n};\n\nconst fuzzyFilter: TextFilter = (pattern, target) => {\n  const indexes = [];\n  let index = 0;\n  for (const c of pattern) {\n    index = target.indexOf(c, index);\n    if (index < 0) return null;\n    indexes.push(index);\n    index++;\n  }\n  return indexes;\n};\n\nconst textFilterMap: Record<TextFilterKind, TextFilter> = {\n  substringFilter,\n  regexFilter,\n  fuzzyFilter,\n};\n\nconst createTextFilter = (\n  textFilterKind: TextFilterKind,\n  options?: {\n    ignoreCase?: boolean,\n  }\n): TextFilter => {\n  const {\n    ignoreCase = false,\n  } = options ?? {};\n\n  const textFilter = (pattern: string, target: string) => {\n    if (ignoreCase) {\n      pattern = pattern.toLowerCase();\n      target = target.toLowerCase();\n    };\n    return textFilterMap[textFilterKind](pattern, target);\n  };\n\n  return textFilter;\n};\n\nexport {\n  substringFilter,\n  regexFilter,\n  fuzzyFilter,\n  createTextFilter,\n};\n\nexport type {\n  TextFilterKind,\n  TextFilter,\n};\n","import {\n  CSSProperties,\n} from 'react';\nimport {\n  Keyboard,\n} from './Keyboard';\n\nimport {\n  MatchedText,\n} from './MatchedText';\n\nimport {\n  createQuickPickContext,\n} from './QuickPick';\n\nimport {\n  Keys,\n} from '../keybindings';\n\nimport {\n  createTextFilter,\n} from '../text-filters'\n\nimport type {\n  Command,\n} from '../commands';\n\ninterface CommandPaletteItem {\n  name: string;\n  command: Command;\n  keys: Keys;\n}\n\nconst itemStyle: CSSProperties = {\n  backgroundColor: 'white',\n  width: '100%',\n  height: '100%',\n  margin: 0,\n  padding: '4px 8px',\n  boxSizing: 'border-box',\n};\n\nconst itemStyleSelected: CSSProperties = {\n  ...itemStyle,\n  backgroundColor: '#ddd',\n};\n\nconst renderItem = (\n  {name, matchedIndexes, content}: any,\n  isSelected: boolean,\n) => {\n  return (\n    <div\n      style={isSelected ? itemStyleSelected : itemStyle}\n    >\n      <MatchedText text={name} matchedIndexes={matchedIndexes} />\n      <Keyboard keys={content.keys} />\n    </div>\n  );\n};\n\nconst {\n  QuickPickContext: CommandPaletteContext,\n  QuickPickProvider: CommandPaletteProvider,\n} = createQuickPickContext<CommandPaletteItem>({\n  renderItem,\n  textFilter: createTextFilter('fuzzyFilter', {ignoreCase: true}),\n});\n\nexport {\n  CommandPaletteContext,\n  CommandPaletteProvider,\n};\n","import {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\n\nimport {\n  useFlag,\n} from './use-flag';\n\nimport type {\n  TextFilter,\n} from '../text-filters';\n\ninterface QuickPickItem<Content> {\n  name: string;\n  matchedIndexes: number[];\n  content: Content;\n}\n\ninterface HasName {\n  name: string;\n}\n\nconst useQuickPickLogic = <Item extends HasName>({\n  items,\n  textFilter,\n}: {\n  items: Item[],\n  textFilter: TextFilter,\n}) => {\n  const [inputText, setInputText] = useState('');\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [isOpen, {on: isOpenOn, off: isOpenOff}] = useFlag(false);\n  const [matchedItems, setMatchedItems] = useState<QuickPickItem<Item>[]>([]);\n\n  const open = useCallback(() => {\n    setInputText('');\n    setSelectedIndex(0);\n    isOpenOn();\n  }, [isOpenOn]);\n\n  const close = useCallback(() => {\n    setInputText('');\n    setSelectedIndex(0);\n    isOpenOff();\n  }, [isOpenOff]);\n\n  const toggle = useCallback(() => {\n    if (isOpen) {\n      close();\n    } else {\n      open();\n    }\n  }, [isOpen, open, close]);\n\n  const select = useCallback<() => Item | null>(() => {\n    const selectedItem = matchedItems[selectedIndex]?.content ?? null;\n    close();\n    return selectedItem;\n  }, [selectedIndex, matchedItems, close]);\n\n  const chanegeInputText = useCallback((newInputText: string) => {\n    setInputText(newInputText);\n    setSelectedIndex(0);\n  }, []);\n\n  const nextItem = useCallback(() => {\n    setSelectedIndex((prev) => Math.min(prev + 1, matchedItems.length - 1));\n  }, [matchedItems]);\n\n  const previousItem = useCallback(() => {\n    setSelectedIndex((prev) => Math.max(0, prev - 1));\n  }, []);\n\n  useEffect(() => {\n    const newMatchedItems: QuickPickItem<Item>[] = [];\n    items.forEach((item) => {\n      const matchedIndexes = textFilter(inputText, item.name);\n      if (matchedIndexes !== null) {\n        newMatchedItems.push({\n          name: item.name,\n          matchedIndexes,\n          content: item,\n        });\n      }\n    });\n    setMatchedItems(newMatchedItems);\n  }, [inputText, isOpen, items, textFilter]);\n\n  return {\n    isOpen,\n    open,\n    close,\n    toggle,\n    nextItem,\n    previousItem,\n    select,\n    chanegeInputText,\n    matchedItems,\n    selectedIndex,\n  };\n}\n\nexport {\n  useQuickPickLogic,\n};\n\nexport type {\n  QuickPickItem,\n  HasName,\n};\n\n","import {\n  useState,\n  useCallback,\n  useRef,\n  createContext,\n  ReactNode,\n  CSSProperties,\n  ChangeEventHandler,\n  MouseEventHandler,\n} from 'react';\nimport ReactModal from 'react-modal';\n\nimport {\n  useFlag\n} from '../hooks/use-flag';\n\nimport {\n  Deferred,\n} from '../deferred';\n\nimport {\n  useKeybindings,\n} from '../hooks/use-keybindings';\nimport type {\n  Keys,\n} from '../keybindings';\n\nconst modalStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    width: '80%',\n    height: '20%',\n    overflow: 'hidden',\n    padding: '3px',\n    boxSizing: 'border-box',\n  } as CSSProperties,\n};\n\nconst promptStyle: CSSProperties = {\n  margin: 0,\n  padding: '2px 8px',\n  boxSizing: 'border-box',\n  color: '#333',\n};\n\nconst inputStyle: CSSProperties = {\n  width: '100%',\n  margin: 0,\n  padding: '4px 8px',\n  // padding: 0,\n  fontSize: '1.2em',\n  boxSizing: 'border-box',\n  border: 'solid 2px orange',\n  color: '#333',\n};\n\ninterface InputBoxPresentationalProps {\n  prompt: string;\n  placeHolder: string;\n  isOpen: boolean;\n  onClose: () => unknown;\n  onTextChange: ChangeEventHandler<HTMLInputElement>;\n  onMouseDownOutside: MouseEventHandler<HTMLDivElement>;\n  parentSelector?: () => HTMLElement;\n}\n\nconst InputBoxPresentational = ({\n  prompt,\n  placeHolder,\n  isOpen,\n  onClose,\n  onTextChange,\n  onMouseDownOutside,\n  parentSelector,\n}: InputBoxPresentationalProps) => {\n  return (\n    <div onMouseDown={onMouseDownOutside} >\n      <ReactModal\n        isOpen={isOpen}\n        onRequestClose={onClose}\n        style={modalStyles}\n        contentLabel=\"Input Box\"\n        parentSelector={parentSelector}\n      >\n        <input\n          autoFocus\n          onChange={onTextChange}\n          type='text'\n          placeholder={placeHolder}\n          style={inputStyle}\n        ></input>\n        {\n          prompt &&\n          <div style={promptStyle}>{ prompt }</div>\n        }\n      </ReactModal>\n    </div>\n  );\n};\n\ninterface InputBoxOptions {\n  // title?: string;\n  prompt?: string;\n  placeHolder?: string;\n}\n\ninterface InputBoxGlobals {\n  isOpen: boolean;\n  showInputBox: (options?: InputBoxOptions) => Promise<string | null>;\n  cancelInputBox: () => void;\n  confirmInputBox: () => void;\n}\n\nconst INPUT_BOX_COMMANDS = [\n  'cancelInputBox',\n  'confirmInputBox',\n] as const;\n\ntype InputBoxAllCommandList = typeof INPUT_BOX_COMMANDS;\ntype InputBoxCommand = InputBoxAllCommandList[number];\n\nconst inputBoxKeybindings: Record<InputBoxCommand, Keys> = {\n  cancelInputBox: 'esc',\n  confirmInputBox: 'enter',\n};\n\nconst createInputBoxContext = () => {\n  const InputBoxContext = createContext<InputBoxGlobals>({\n    isOpen: false,\n    showInputBox: () => { throw Error('InputBoxGlobals is not initialized yet') },\n    cancelInputBox: () => { throw Error('InputBoxGlobals is not initialized yet') },\n    confirmInputBox: () => { throw Error('InputBoxGlobals is not initialized yet') },\n  });\n\n  const InputBoxProvider = ({\n    parentSelector,\n    modalAppElement = '#root',\n    children,\n  }: {\n    parentSelector?: () => HTMLElement;\n    modalAppElement?: string | HTMLElement;\n    children: ReactNode;\n  }) => {\n    ReactModal.setAppElement(modalAppElement);\n\n    const deferredRef = useRef<Deferred<string | null> | null>(null);\n    const [placeHolder, setPlaceHolder] = useState('');\n    const [prompt, setPrompt] = useState('');\n    const [inputText, setInputText] = useState('');\n\n    const [\n      isOpen,\n      {\n        on: isOpenOn,\n        off: isOpenOff,\n      }\n    ] = useFlag(false);\n\n    const open = useCallback(() => {\n      isOpenOn();\n      setInputText('');\n    }, [isOpenOn]);\n\n    const close = useCallback(() => {\n      isOpenOff();\n    }, [isOpenOff]);\n\n    const onTextChange: ChangeEventHandler<HTMLInputElement> = useCallback((event) => {\n      setInputText(event.target.value);\n    }, []);\n\n    const showInputBox = (options?: InputBoxOptions): Promise<string | null> => {\n      const {\n        placeHolder = '',\n        prompt = '',\n      } = options || {};\n\n      setPlaceHolder(placeHolder);\n      setPrompt(prompt);\n\n      const deferred = new Deferred<string | null>();\n      deferredRef.current = deferred;\n      open();\n      return deferred.promise;\n    };\n\n    const cancelInputBox = () => {\n      close();\n      deferredRef.current?.resolve(null);\n    };\n\n    const confirmInputBox = () => {\n      close();\n      deferredRef.current?.resolve(inputText);\n    };\n\n    const callbacks = {\n      cancelInputBox,\n      confirmInputBox,\n    };\n\n    useKeybindings({\n      keybindings: inputBoxKeybindings,\n      commandCallbacks: callbacks,\n      commands: INPUT_BOX_COMMANDS,\n      bindGlobal: true,\n      enabled: isOpen,\n    });\n\n    const inputBoxGlobals: InputBoxGlobals = {\n      isOpen,\n      showInputBox,\n      cancelInputBox,\n      confirmInputBox,\n    };\n\n    return (\n      <InputBoxContext.Provider\n        value={inputBoxGlobals}\n      >\n        {\n          isOpen &&\n          <InputBoxPresentational\n            prompt={prompt}\n            placeHolder={placeHolder}\n            isOpen={isOpen}\n            onClose={cancelInputBox}\n            onTextChange={onTextChange}\n            onMouseDownOutside={cancelInputBox}\n            parentSelector={parentSelector}\n          />\n        }\n        {children}\n      </InputBoxContext.Provider>\n    );\n  };\n\n  return {\n    InputBoxContext,\n    InputBoxProvider,\n  };\n};\n\n\nconst {\n  InputBoxContext,\n  InputBoxProvider,\n} = createInputBoxContext();\n\nexport {\n  InputBoxContext,\n  InputBoxProvider,\n};\n","import * as React from 'react'\nimport {useDropzone} from 'react-dropzone'\n\ninterface IDropFileArea {\n  onDropFile(file: File): void;\n  children: any;\n  accept?: string | string[];\n}\n\nconst fileDropAreaStyle: React.CSSProperties = {\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n};\n\nconst DropFileArea: React.FC<IDropFileArea> = ({\n  onDropFile,\n  children,\n  accept,\n}) => {\n  const onDrop = (acceptedFiles: File[]) => {\n    onDropFile(acceptedFiles[0]);\n  };\n  const {getRootProps, getInputProps} = useDropzone({\n    noKeyboard: true,\n    noClick: true,\n    maxFiles: 1,\n    onDrop,\n    accept,\n  })\n\n  return (\n    <div {...getRootProps({\n        onClick: (event: React.MouseEvent<HTMLElement, MouseEvent>) => event.stopPropagation(),\n      })}\n      style={fileDropAreaStyle}\n    >\n      <input {...getInputProps()} />\n      { children }\n    </div>\n  )\n}\n\nexport {\n  DropFileArea\n};\n","const COMMANDS = [\n  'doNothing',\n\n  'fullScreenOn',\n  'fullScreenOff',\n  'fullScreenToggle',\n\n  'playingOn',\n  'playingOff',\n  'playingToggle',\n\n  'mutedOn',\n  'mutedOff',\n  'mutedToggle',\n\n  'loopOn',\n  'loopOff',\n  'loopToggle',\n\n  'controlsOn',\n  'controlsOff',\n  'controlsToggle',\n\n  'pipOn',\n  'pipOff',\n  'pipToggle',\n\n  'showInfoOn',\n  'showInfoOff',\n  'showInfoToggle',\n\n  'volumeUp',\n  'volumeDown',\n  'volumeDefault',\n\n  'playbackRateUp',\n  'playbackRateDown',\n  'playbackRateDefault',\n\n  'seekForward10Seconds',\n  'seekBackward10Seconds',\n\n  'seekTo0Percent',\n  'seekTo10Percent',\n  'seekTo20Percent',\n  'seekTo30Percent',\n  'seekTo40Percent',\n  'seekTo50Percent',\n  'seekTo60Percent',\n  'seekTo70Percent',\n  'seekTo80Percent',\n  'seekTo90Percent',\n\n  'commandPaletteOpen',\n  'loadUrl',\n] as const;\n\ntype AllCommandList = typeof COMMANDS;\ntype Command = AllCommandList[number];\n\nconst isCommand = (obj: any): obj is Command => {\n  return (\n    typeof obj === 'string'\n    && (COMMANDS as readonly string[]).includes(obj)\n  );\n};\n\n// type CommandCallbacks = Partial<Record<Command, () => unknown>>;\ntype CommandCallbacks = Record<Command, () => unknown>;\n\nconst commandToTitle = (command: Command): string => {\n  // example: 'fullScreenOn' -> 'Full Screen On'\n  return command\n    .replace(/^(\\w)/, (v) => v.toUpperCase())\n    .replace(/([a-z])([A-Z])/g, '$1 $2')\n    .replace(/([a-zA-Z])(\\d)/g, '$1 $2')\n    .replace(/(\\d)([a-zA-Z])/g, '$1 $2');\n};\n\nexport {\n  COMMANDS,\n  commandToTitle,\n  isCommand,\n};\n\nexport type {\n  AllCommandList,\n  Command,\n  CommandCallbacks,\n};\n","import {CSSProperties, FC} from 'react';\nimport {Keyboard} from './Keyboard';\n\nimport {SUPPORTED_EXTENSIONS_WITH_COMMA} from 'src-common/media';\nimport {\n  COMMANDS,\n  commandToTitle,\n} from '../commands';\nimport type {\n  Keybindings\n} from '../keybindings';\n\nconst landingPageStyle: CSSProperties = {\n  padding: '0px 40px',\n  background: 'white',\n  width: '100%',\n  height: '100%',\n  overflow: 'scroll',\n};\n\nconst tableStyle: CSSProperties = {\n  borderCollapse: 'collapse',\n  // border: '#ddd',\n};\n\nconst theadStyle: CSSProperties = {\n  backgroundColor: '#777',\n  color: '#eee',\n  border: '1px solid #ddd',\n  padding: '4px',\n};\n\nconst thStyle: CSSProperties = {\n  padding: '4px',\n};\n\nconst trStyle: CSSProperties = {\n  padding: '4px',\n};\n\nconst tdStyle: CSSProperties = {\n  padding: '4px',\n};\n\ninterface LandingPageProps {\n  keybindings: Keybindings;\n}\n\nconst LandingPage: FC<LandingPageProps> = ({\n  keybindings,\n}) => (\n  <div\n    style={landingPageStyle}\n  >\n    <h3>How to Use</h3>\n    <li>command palette: <Keyboard keys={keybindings.commandPaletteOpen} /></li>\n    <li>load URL: <Keyboard keys={keybindings.loadUrl} /> (supported URL depends <a href=\"https://github.com/cookpete/react-player\">react-player</a></li>\n    <li>load File: drag and drop media file here (supported file depends your browser)</li>\n\n    <h3>Keybindings</h3>\n    <table style={tableStyle} >\n      <thead style={theadStyle} >\n        <th style={thStyle} >command</th>\n        <th style={thStyle} >keybord shortcuts</th>\n      </thead>\n      <tbody>\n        {\n          COMMANDS.map((command, idx) => (\n            <tr\n              key={command}\n              style={{\n                ...trStyle,\n                backgroundColor: idx % 2 === 0 ? '#eee' : '#fff',\n              }} \n            >\n              <td style={tdStyle} >{commandToTitle(command)}</td>\n              <td style={tdStyle} ><Keyboard keys={keybindings[command]} /></td>\n            </tr>\n          ))\n        }\n      </tbody>\n    </table>\n  </div>\n);\n\nexport {\n  LandingPage,\n}\n","import {useState, useCallback} from 'react';\n\nconst clipValue = (\n  value: number,\n  [min, max]: [number, number],\n) => {\n  return Math.min(Math.max(value, min), max);\n};\n\nconst useClipedValue = (\n  initialValue: number,\n  {min, max, step = 0}: {min: number; max: number; step?: number},\n) => {\n  const [value, setRawValue] = useState(clipValue(initialValue, [min, max]));\n\n  const callbacks = {\n\n    set: useCallback((newValue: number) => {\n      setRawValue(clipValue(newValue, [min, max]));\n    }, [min, max]),\n\n    up: useCallback(()  => {\n      setRawValue((prev) => clipValue(prev + step, [min, max]));\n    }, [min, max, step]),\n\n    down: useCallback(()  => {\n      setRawValue((prev) => clipValue(prev - step, [min, max]));\n    }, [min, max, step]),\n\n    min: useCallback(() => {\n      setRawValue(min);\n    }, [min]),\n\n    max: useCallback(() => {\n      setRawValue(max);\n    }, [max]),\n\n    default: useCallback(() => {\n      setRawValue(clipValue(initialValue, [min, max]));\n    }, [initialValue, min, max]),\n\n  } as const;\n\n  return [value, callbacks] as const;\n};\n\nexport {\n  useClipedValue,\n};\n","type IpcResult<T> = {\n  isOk: true,\n  data: T\n} | {\n  isOk: false,\n  err: Error,\n};\n\nconst ipcResultOk = <T>(data: T): IpcResult<T> => ({isOk: true, data});\nconst ipcResultErr = <T>(err: unknown): IpcResult<T> => {\n  if (err instanceof Error) {\n    return {isOk: false, err};\n  } else {\n    return {isOk: false, err: new Error(String(err))};\n  }\n}\n\nconst IPC_CHANNELS = [\n  'inputFileData',\n  'loadKeybindings',\n] as const;\n\nconst IPC_API_NAME = 'ipcApi';\n\ntype IpcChannelList = typeof IPC_CHANNELS;\ntype IpcChannel = IpcChannelList[number];\n\n// const wrapReturnWithResult = <T>(func: (...args: any[]) => T): (...args: any[]) => IpcResult<T> => {\n//   return (...args: any[]) => ipcResultOk(func(args));\n// };\n\ninterface FileData {\n  data: Uint8Array;\n  mime: string;\n}\n\ninterface _IpcApi {\n  inputFileData: () => Promise<IpcResult<FileData | null>>;\n  // check type in renderer process.\n  loadKeybindings: () => Promise<IpcResult<unknown | null>>;\n}\n\n// NOTE:\n// all api function should return promise to use\n// same type defition in `ipcMain.handle()` and `ipcRenderer.invoke()`.\ntype IpcApi = {\n  [K in IpcChannel]: _IpcApi[K];\n} & Record<IpcChannel, (...args: any[]) => Promise<IpcResult<any>>>;\n\nexport {\n  IPC_API_NAME,\n  IPC_CHANNELS,\n  ipcResultOk,\n  ipcResultErr,\n};\n\nexport type {\n  IpcApi,\n  IpcChannel,\n  IpcResult,\n};\n","import {\n  IPC_API_NAME,\n  IPC_CHANNELS,\n} from 'src-common/ipc-common';\nimport type {\n  IpcApi,\n  IpcChannel,\n  IpcResult,\n} from 'src-common/ipc-common';\n\nconst canUseIpcApi = () => IPC_API_NAME in window;\n\ndeclare global {\n  interface Window {\n    ipcApi: IpcApi;\n  }\n}\n\nconst createDummyIpcRendererApi = (): IpcApi => {\n  const ipcRendererApi: any = {};\n  IPC_CHANNELS.forEach((ipcChannel: IpcChannel) => {\n    ipcRendererApi[ipcChannel] = async (..._args: any[]) => {\n      throw Error(`can not use IPC API : ${ipcChannel}`);\n    }\n  });\n  return ipcRendererApi as IpcApi;\n};\n\nconst ipcRendererApi: IpcApi = canUseIpcApi() ? window[IPC_API_NAME] : createDummyIpcRendererApi();\n\nconst unwrapIpcResult = <T>(result: IpcResult<T>): T => {\n  if (result.isOk) {\n    return result.data;\n  } else {\n    // alert(result.err);\n    // error handling is implemented in caller.\n    throw result.err;\n  }\n};\n\nexport {\n  canUseIpcApi,\n  ipcRendererApi,\n  unwrapIpcResult,\n};\n","import React, {FC, useState, useEffect, useContext, useRef} from 'react';\nimport ReactPlayer from 'react-player/lazy';\n\nimport {\n  CommandPaletteContext,\n} from './CommandPaletteContext';\nimport {\n  InputBoxContext,\n} from './InputBoxContext';\n\nimport {DropFileArea} from './DropFileArea';\nimport {LandingPage} from './LandingPage';\n\nimport type {\n  Keybindings,\n} from '../keybindings';\n\nimport {useKeybindings} from '../hooks/use-keybindings';\nimport {useFlag} from '../hooks/use-flag';\nimport {useClipedValue} from '../hooks/use-cliped-value';\n\nimport {\n  CommandCallbacks,\n  COMMANDS,\n  commandToTitle,\n} from '../commands';\nimport type {\n  AllCommandList,\n} from '../commands';\n\nimport {\n  ipcRendererApi,\n  unwrapIpcResult,\n  canUseIpcApi,\n} from '../ipc-renderer';\n\ninterface KFMediaPlayerProps {\n  keybindings: Keybindings;\n  fullScreenOn: () => void;\n  fullScreenOff: () => void;\n  fullScreenToggle: () => void;\n};\n\nconst KFMediaPlayer: FC<KFMediaPlayerProps> = ({\n  keybindings,\n  fullScreenOn,\n  fullScreenOff,\n  fullScreenToggle,\n}) => {\n  const [url, setUrl] = useState('');\n  const commandCallbacksRef = useRef<CommandCallbacks | null>(null);\n\n  useEffect(() => {\n    (async () => {\n      if (!canUseIpcApi()) return;\n      try {\n        const fileData = unwrapIpcResult(await ipcRendererApi.inputFileData());\n        if (fileData) {\n          const {\n            data,\n            mime,\n          } = fileData;\n          const blob = new Blob([data.buffer], {type: mime});\n          const newUrl = URL.createObjectURL(blob);\n          setUrl(newUrl);\n        }\n      } catch (e) {\n        console.log(e);\n        alert(e);\n      }\n    })();\n  }, []);\n\n  const [\n    playing,\n    {\n      set: playingSet,\n      on: playingOn,\n      off: playingOff,\n      toggle: playingToggle,\n    }\n  ] = useFlag(true);\n\n  const [\n    muted,\n    {\n      on: mutedOn,\n      off: mutedOff,\n      toggle: mutedToggle,\n    }\n  ] = useFlag(false);\n\n  const [\n    loop,\n    {\n      on: loopOn,\n      off: loopOff,\n      toggle: loopToggle,\n    }\n  ] = useFlag(false);\n\n  const [\n    pip,\n    {\n      on: pipOn,\n      off: pipOff,\n      toggle: pipToggle,\n    }\n  ] = useFlag(false);\n\n  const [\n    controls,\n    {\n      on: controlsOn,\n      off: controlsOff,\n      toggle: controlsToggle,\n    }\n  ] = useFlag(true);\n\n  const [\n    showInfo,\n    {\n      on: showInfoOn,\n      off: showInfoOff,\n      toggle: showInfoToggle,\n    }\n  ] = useFlag(false);\n\n  const [\n    volume,\n    {\n      up: volumeUp,\n      down: volumeDown,\n      default: volumeDefault,\n    }\n  ] = useClipedValue(0.5, {min: 0, max: 1, step: 0.05});\n\n  const [\n    playbackRate,\n    {\n      up: playbackRateUp,\n      down: playbackRateDown,\n      default: playbackRateDefault,\n    }\n  ] = useClipedValue(1, {min: 0.1, max: 4, step: 0.1});\n\n  const [\n    played,\n    {\n      set: playedSet,\n    }\n  ] = useClipedValue(0, {min: 0, max: 1});\n\n  const [\n    loaded,\n    {\n      set: loadedSet,\n    }\n  ] = useClipedValue(0, {min: 0, max: 1});\n\n  const [\n    duration,\n    {\n      set: durationSet,\n    }\n  ] = useClipedValue(0, {min: 0, max: 1});\n\n  const player = React.useRef<any>();\n\n  const commandPalette = useContext(CommandPaletteContext);\n  const inputBox = useContext(InputBoxContext);\n\n  const loadUrl = React.useCallback((newUrl: string) => {\n    setUrl(newUrl);\n    loadedSet(0);\n    playedSet(0);\n  }, [loadedSet, playedSet]);\n\n  const onDropFile = React.useCallback((file: File) => {\n    const url = URL.createObjectURL(file);\n    // console.log({url});\n    loadUrl(url);\n  }, [loadUrl]);\n\n  const seekBySeconds = React.useCallback((seconds: number) => {\n    if (player.current) {\n      const currentSeconds = player.current.getCurrentTime();\n      player.current.seekTo(currentSeconds + seconds, 'seconds');\n    }\n  }, []);\n\n  const seekToFraction = React.useCallback((fraction: number) => {\n    if (player.current) {\n      player.current.seekTo(fraction, 'fraction');\n    }\n  }, []);\n\n  const doNothing = () => {};\n  const commandCallbacks: CommandCallbacks = {\n    doNothing,\n\n    fullScreenOn,\n    fullScreenOff,\n    fullScreenToggle,\n\n    playingOn,\n    playingOff,\n    playingToggle,\n\n    mutedOn,\n    mutedOff,\n    mutedToggle,\n\n    loopOn,\n    loopOff,\n    loopToggle,\n\n    controlsOn,\n    controlsOff,\n    controlsToggle,\n\n    pipOn,\n    pipOff,\n    pipToggle,\n\n    showInfoOn,\n    showInfoOff,\n    showInfoToggle,\n\n    volumeUp,\n    volumeDown,\n    volumeDefault,\n\n    playbackRateUp,\n    playbackRateDown,\n    playbackRateDefault,\n\n    seekForward10Seconds: () => seekBySeconds(10),\n    seekBackward10Seconds: () => seekBySeconds(-10),\n\n    seekTo0Percent: () => seekToFraction(0.0),\n    seekTo10Percent: () => seekToFraction(0.1),\n    seekTo20Percent: () => seekToFraction(0.2),\n    seekTo30Percent: () => seekToFraction(0.3),\n    seekTo40Percent: () => seekToFraction(0.4),\n    seekTo50Percent: () => seekToFraction(0.5),\n    seekTo60Percent: () => seekToFraction(0.6),\n    seekTo70Percent: () => seekToFraction(0.7),\n    seekTo80Percent: () => seekToFraction(0.8),\n    seekTo90Percent: () => seekToFraction(0.9),\n\n    commandPaletteOpen: async () => {\n      if (inputBox.isOpen || commandPalette.isOpen) {\n        return;\n      }\n      const items = COMMANDS.map((command) => {\n        return {\n          name: commandToTitle(command),\n          command,\n          keys: keybindings[command],\n        };\n      });\n      const item = await commandPalette.showQuickPick(items);\n      if (item !== null && item.command) {\n        const command = item.command;\n        commandCallbacksRef.current?.[command]?.();\n      }\n      // commandPaletteOpen({commandCallbacks}),\n    },\n    loadUrl: async () => {\n      if (inputBox.isOpen || commandPalette.isOpen) {\n        return;\n      }\n      const newUrl = await inputBox.showInputBox({\n        prompt: 'input URL to laod',\n      });\n\n      if (newUrl) {\n        loadUrl(newUrl);\n      }\n    },\n  };\n\n  commandCallbacksRef.current = commandCallbacks;\n  useKeybindings<AllCommandList>({\n    keybindings, commandCallbacks, commands: COMMANDS\n  });\n\n  if (!url) {\n    return (\n      <DropFileArea\n        onDropFile={onDropFile}\n      >\n        <LandingPage\n          keybindings={keybindings}\n        />\n      </DropFileArea>\n    );\n  }\n  return (\n    <DropFileArea\n      onDropFile={onDropFile}\n    >\n          <ReactPlayer\n            ref={player}\n            width=\"100%\"\n            height=\"100%\"\n            url={url}\n            pip={pip}\n            playing={playing}\n            controls={controls}\n            loop={loop}\n            playbackRate={playbackRate}\n            volume={volume}\n            muted={muted}\n\n            onReady={() => console.log('onReady')}\n            onStart={() => console.log('onStart')}\n\n            onPlay={playingOn}\n            onEnablePIP={pipOn}\n            onDisablePIP={pipOff}\n            onPause={playingOff}\n            onBuffer={() => console.log('onBuffer')}\n            onSeek={(e) => console.log('onSeek', e)}\n            onEnded={() => {playingSet(loop)}}\n            onError={(_e) => {\n              alert('sorry, error occurred');\n              // throw e;\n            }}\n            onProgress={({loaded, played}) => {\n              loadedSet(loaded);\n              playedSet(played);\n            }}\n            onDuration={durationSet}\n          />\n      {/* to avoid focus player */}\n      <div\n        style={{\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n          backgroundColor: 'transparent',\n        }}\n      >\n      </div>\n      {\n        showInfo\n        &&\n        <div\n          style={{\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            backgroundColor: 'rgba(255, 255, 255, 0.5)',\n          }}\n        >\n          <pre><code>\n            state = {\n              JSON.stringify({\n                url,\n                playing, muted,\n                volume, playbackRate, loop,\n                duration, played, loaded,\n                controls, pip,\n                canPlay: ReactPlayer.canPlay(url),\n                canEnablePip: ReactPlayer.canEnablePIP(url),\n              }, null, '  ')\n            }\n          </code></pre>\n        </div>\n      }\n    </DropFileArea>\n  );\n}\n\nexport {\n  KFMediaPlayer\n};\n","import {\n  COMMANDS,\n  isCommand,\n} from './commands';\n\nimport type {\n  Command,\n} from './commands';\n\nimport {\n  Validator,\n} from 'jsonschema';\n\ntype Keys = string | string[] | null;\n// type Keybindings = Partial<Record<Command, Keys>>;\ntype Keybindings = Record<Command, Keys>;\n\nconst createKeybindingsJsonSchema = () => {\n  const keysJsonSchema = {\n    \"anyOf\": [\n      {\n        \"type\": \"null\"\n      },\n      {\n        \"type\": \"string\"\n      },\n      {\n        \"type\": \"array\",\n        \"items\": [\n          {\n            \"type\": \"string\"\n          },\n          {\n            \"type\": \"string\"\n          }\n        ]\n      },\n    ],\n  };\n  const base: any = {\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"additionalProperties\": false,\n    \"properties\": {\n    },\n    \"required\": [\n    ],\n  };\n  COMMANDS.forEach((command: Command) => {\n    base.properties[command] = keysJsonSchema;\n    // partial keybindings is OK for now.\n    // base.required.push(command);\n  });\n  return base;\n};\n\nconst keybindingsJsonSchema = createKeybindingsJsonSchema();\nconst keybindingsJsonSchemaValidator = new Validator();\n\n// const isKeys = (obj: any): obj is Keys => {\n//   return (\n//     (obj === null)\n//     || (typeof obj === 'string')\n//     || (\n//       (typeof obj === 'object') \n//       && (obj instanceof Array)\n//       && obj.every((s) => (typeof s === 'string'))\n//     )\n//   );\n// };\n\n// const isKeybindings = (obj: any): obj is Keybindings => {\n//   return (\n//     (typeof obj === 'object')\n//     && (obj !== null)\n//     && COMMANDS.every((command) => isKeys(obj[command]))\n//   );\n// };\n\nconst isPartialKeybindings = (obj: any): obj is Partial<Keybindings> => {\n  const result = keybindingsJsonSchemaValidator.validate(obj, keybindingsJsonSchema);\n  if (result.valid) {\n    return true;\n  } else {\n    throw result.errors;\n  }\n\n  // return (\n  //   (typeof obj === 'object')\n  //   && (obj !== null)\n  //   && Object.keys(obj).every((key) => isCommand(key) && isKeys(obj[key]))\n  // );\n};\n\nconst defaultKeybindings: Keybindings = {\n  doNothing: null,\n\n  fullScreenOn: null,\n  fullScreenOff: null,\n  fullScreenToggle: 'f',\n\n  playingOn: null,\n  playingOff: null,\n  playingToggle: 'space',\n\n  mutedOn: null,\n  mutedOff: null,\n  mutedToggle: 'm',\n\n  loopOn: null,\n  loopOff: null,\n  loopToggle: null,\n\n  controlsOn: null,\n  controlsOff: null,\n  controlsToggle: 'c',\n\n  pipOn: null,\n  pipOff: null,\n  pipToggle: 'p',\n\n  showInfoOn: null,\n  showInfoOff: null,\n  showInfoToggle: 'i',\n\n  volumeUp: '+',\n  volumeDown: '-',\n  volumeDefault: null,\n\n  playbackRateUp: '>',\n  playbackRateDown: '<',\n  playbackRateDefault: null,\n\n  seekForward10Seconds: 'l',\n  seekBackward10Seconds: 'j',\n\n  seekTo0Percent: '0',\n  seekTo10Percent: '1',\n  seekTo20Percent: '2',\n  seekTo30Percent: '3',\n  seekTo40Percent: '4',\n  seekTo50Percent: '5',\n  seekTo60Percent: '6',\n  seekTo70Percent: '7',\n  seekTo80Percent: '8',\n  seekTo90Percent: '9',\n\n  commandPaletteOpen: ['command+shift+p', 'ctrl+shift+p'],\n  loadUrl: ['command+shift+u', 'ctrl+shift+u'],\n};\n\nexport {\n  defaultKeybindings,\n  isPartialKeybindings,\n};\n\nexport type {\n  Keys,\n  Keybindings,\n}\n","import {useState, useEffect, useRef, useCallback, CSSProperties} from 'react';\nimport {FullScreen, useFullScreenHandle} from 'react-full-screen';\nimport {KFMediaPlayer} from './KFMediaPlayer';\nimport { CommandPaletteProvider } from './CommandPaletteContext';\nimport { InputBoxProvider } from './InputBoxContext';\nimport { defaultKeybindings, isPartialKeybindings } from '../keybindings';\nimport {\n  ipcRendererApi,\n  unwrapIpcResult,\n  canUseIpcApi,\n} from '../ipc-renderer';\n\ninterface AppProps {\n}\n\nconst App: React.FC<AppProps> = () => {\n  const modalRootRef = useRef(null);\n  const [fullScreen, setFullScreen] = useState(false);\n  const [screenWidth, setScreenWidth] = useState(document.documentElement.clientWidth);\n  const [screenHeight, setScreenHeight] = useState(document.documentElement.clientHeight);\n  const [keybindings, setKeybindings] = useState(defaultKeybindings);\n\n  useEffect(() => {\n    const onResize = () => {\n      setScreenWidth(document.documentElement.clientWidth);\n      setScreenHeight(document.documentElement.clientHeight);\n    };\n    window.addEventListener('resize', onResize);\n    return () => {\n      window.removeEventListener('resize', onResize);\n    }\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      if (!canUseIpcApi()) return;\n      try {\n        const rawObj = unwrapIpcResult(await ipcRendererApi.loadKeybindings());\n\n        // console.log({rawObj});\n        if (rawObj) {\n          if (isPartialKeybindings(rawObj)) {\n            setKeybindings({\n              ...defaultKeybindings,\n              ...rawObj,\n            });\n          }\n        }\n      } catch (e) {\n        console.error(e);\n        alert(`error occrus while loading keybindings.\\n${String(e)}`);\n      }\n    })();\n  }, []);\n\n  const fullScrenHandle = useFullScreenHandle();\n\n  const fullScreenOn = useCallback(() => {\n    if (!fullScreen) {\n      fullScrenHandle.enter();\n    }\n  }, [fullScreen, fullScrenHandle]);\n\n  const fullScreenOff = useCallback(() => {\n    if (fullScreen) {\n      fullScrenHandle.exit();\n    }\n  }, [fullScreen, fullScrenHandle]);\n\n  const fullScreenToggle = useCallback(() => {\n    if (fullScreen) {\n      fullScrenHandle.exit();\n    } else {\n      fullScrenHandle.enter();\n    }\n  }, [fullScreen, fullScrenHandle]);\n\n  const divStyle: CSSProperties = fullScreen\n    ? {\n      width: '100%',\n      height: '100%',\n    }\n    : {\n      width: screenWidth,\n      height: screenHeight,\n    };\n\n  const parentSelector = () => {\n    if(modalRootRef.current) {\n      return modalRootRef.current;\n    } else {\n      return document.body;\n    }\n  };\n\n  return (\n    <FullScreen\n      handle={fullScrenHandle}\n      onChange={setFullScreen}\n    >\n      <div ref={modalRootRef}>\n        <CommandPaletteProvider\n          parentSelector={parentSelector}\n        >\n          <InputBoxProvider\n            parentSelector={parentSelector}\n          >\n            <div\n              style={divStyle}\n            >\n              <KFMediaPlayer\n                keybindings={keybindings}\n                fullScreenOn={fullScreenOn}\n                fullScreenOff={fullScreenOff}\n                fullScreenToggle={fullScreenToggle}\n              />\n            </div>\n          </InputBoxProvider>\n        </CommandPaletteProvider>\n      </div>\n    </FullScreen>\n  );\n}\n\nexport {\n  App\n};\n","import 'normalize.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nimport {App} from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}